[gd_scene load_steps=14 format=2]

[ext_resource path="res://Scripts/Main.gd" type="Script" id=1]
[ext_resource path="res://Scenes/Mob.tscn" type="PackedScene" id=2]
[ext_resource path="res://Scenes/Player.tscn" type="PackedScene" id=3]
[ext_resource path="res://Scenes/HUD.tscn" type="PackedScene" id=4]
[ext_resource path="res://Assets/House In a Forest Loop.ogg" type="AudioStream" id=5]
[ext_resource path="res://Assets/gameover.wav" type="AudioStream" id=6]
[ext_resource path="res://Assets/Backgraund0.png" type="Texture" id=7]
[ext_resource path="res://Scenes/Setting.tscn" type="PackedScene" id=9]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec2 direction = vec2(0.0, 0.0);
//uniform float speed = 0.0;

void fragment () {
	
	COLOR = texture(TEXTURE, UV + (TIME * direction));
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/direction = Vector2( 0, 0 )

[sub_resource type="Curve2D" id=3]
_data = {
"points": PoolVector2Array( 0, 0, 0, 0, -128, -128, 0, 0, 0, 0, 664, -128, 0, 0, 0, 0, 664, 1152, 0, 0, 0, 0, -128, 1152, 0, 0, 0, 0, -128, -128 )
}

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

// Gonkee's fog shader for Godot 3 - full tutorial https://youtu.be/QEaTsz_0o44
// If you use this shader, I would prefer it if you gave credit to me and my channel

uniform vec3 color = vec3(0.35, 0.48, 0.95);
uniform int OCTAVES = 4;

float rand(vec2 coord){
	return fract(sin(dot(coord, vec2(56, 78)) * 1000.0) * 1000.0);
}

float noise(vec2 coord){
	vec2 i = floor(coord);
	vec2 f = fract(coord);

	// 4 corners of a rectangle surrounding our point
	float a = rand(i);
	float b = rand(i + vec2(1.0, 0.0));
	float c = rand(i + vec2(0.0, 1.0));
	float d = rand(i + vec2(1.0, 1.0));

	vec2 cubic = f * f * (3.0 - 2.0 * f);

	return mix(a, b, cubic.x) + (c - a) * cubic.y * (1.0 - cubic.x) + (d - b) * cubic.x * cubic.y;
}

float fbm(vec2 coord){
	float value = 0.0;
	float scale = 0.5;

	for(int i = 0; i < OCTAVES; i++){
		value += noise(coord) * scale;
		coord *= 2.0;
		scale *= 0.5;
	}
	return value;
}

void fragment() {
	vec2 coord = UV * 20.0;

	vec2 motion = vec2( fbm(coord + vec2(TIME * -0.5, TIME * 0.5)) );

	float final = fbm(coord + motion);

	COLOR = vec4(color, final * 0.5);
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/color = Vector3( 1, 1, 1 )
shader_param/OCTAVES = 4

[node name="Main" type="Node"]
script = ExtResource( 1 )
mob_scene = ExtResource( 2 )

[node name="Background" type="Sprite" parent="."]
material = SubResource( 2 )
position = Vector2( 270, 480 )
scale = Vector2( 2, 2 )
texture = ExtResource( 7 )
region_enabled = true
region_rect = Rect2( 0, 0, 540, 960 )

[node name="Player" parent="." instance=ExtResource( 3 )]

[node name="MobTimer" type="Timer" parent="."]
wait_time = 0.5

[node name="ScoreTimer" type="Timer" parent="."]

[node name="StartTimer" type="Timer" parent="."]
wait_time = 2.0
one_shot = true

[node name="StartPosition" type="Position2D" parent="."]
position = Vector2( 270, 480 )

[node name="MobPath" type="Path2D" parent="."]
curve = SubResource( 3 )

[node name="MobSpawnLocation" type="PathFollow2D" parent="MobPath"]
position = Vector2( -128, -128 )

[node name="HUD" parent="." instance=ExtResource( 4 )]

[node name="Setting" parent="." instance=ExtResource( 9 )]
shaderpath = "../Background"

[node name="Music" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 5 )

[node name="DeathSound" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 6 )

[node name="Fog" type="ColorRect" parent="."]
material = SubResource( 5 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[connection signal="hit" from="Player" to="." method="game_over"]
[connection signal="timeout" from="MobTimer" to="." method="_on_MobTimer_timeout"]
[connection signal="timeout" from="ScoreTimer" to="." method="_on_ScoreTimer_timeout"]
[connection signal="timeout" from="StartTimer" to="." method="_on_StartTimer_timeout"]
[connection signal="start_game" from="HUD" to="." method="new_game"]
